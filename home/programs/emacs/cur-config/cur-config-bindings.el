;;; cur-config-bindings.el --- emacs keybindings

;;; Commentary:

;;; Code:
;; ===Hydra===
(use-package hydra
  ;:ensure t
  :demand t)

;; ===Meow Setup===
(use-package meow
  :after (hydra)
  ;:ensure t
  :demand t
  :preface
  (defvar cur/leader-keymap
    (let ((map (make-sparse-keymap)))
      map)
    "The keymap for meow leader key.")
  (defvar cur/sub-leader-keymap
    (let ((map (make-sparse-keymap)))
      map)
    "The keymap for quick command/function execution. Is under `cur/leader-keymap'.")
  (defun meow-setup ()
    (meow-motion-overwrite-define-key
     '("j" . meow-next)
     '("k" . meow-prev)
     '("<escape>" . ignore))
    (meow-leader-define-key
     ;; SPC j/k will run the original command in MOTION state.
     '("j" . "H-j")
     '("k" . "H-k")
     ;; Use SPC (0-9) for digit arguments.
     '("1" . meow-digit-argument)
     '("2" . meow-digit-argument)
     '("3" . meow-digit-argument)
     '("4" . meow-digit-argument)
     '("5" . meow-digit-argument)
     '("6" . meow-digit-argument)
     '("7" . meow-digit-argument)
     '("8" . meow-digit-argument)
     '("9" . meow-digit-argument)
     '("0" . meow-digit-argument)
     '("/" . meow-keypad-describe-key)
     '("?" . meow-cheatsheet))
    (meow-normal-define-key
     '("0" . meow-expand-0)
     '("9" . meow-expand-9)
     '("8" . meow-expand-8)
     '("7" . meow-expand-7)
     '("6" . meow-expand-6)
     '("5" . meow-expand-5)
     '("4" . meow-expand-4)
     '("3" . meow-expand-3)
     '("2" . meow-expand-2)
     '("1" . meow-expand-1)
     '("-" . negative-argument)
     '(";" . meow-reverse)
     '(":" . meow-page-up)
     '("<" . meow-inner-of-thing)
     '(">" . meow-bounds-of-thing)
     '("," . meow-beginning-of-thing)
     '("." . meow-end-of-thing)
     '("?" . meow-page-down)
     '("a" . meow-append)
     '("A" . meow-open-below)
     '("b" . meow-back-word)
     '("B" . meow-back-symbol)
     '("c" . meow-change)
     '("d" . meow-delete)
     '("D" . meow-backward-delete)
     '("e" . meow-next-word)
     '("E" . meow-next-symbol)
     '("f" . meow-find)
     '("g" . meow-cancel-selection)
     '("G" . meow-grab)
     '("h" . meow-left)
     '("H" . meow-left-expand)
     '("i" . meow-insert)
     '("I" . meow-open-above)
     '("j" . meow-next)
     '("J" . meow-next-expand)
     '("k" . meow-prev)
     '("K" . meow-prev-expand)
     '("l" . meow-right)
     '("L" . meow-right-expand)
     '("m" . meow-join)
     '("n" . meow-search)
     '("o" . meow-block)
     '("O" . meow-to-block)
     '("p" . meow-yank)
     '("P" . meow-clipboard-yank)
     '("q" . meow-goto-line)
     '("Q" . meow-quit)
     '("r" . meow-replace)
     '("R" . meow-swap-grab)
     '("s" . meow-kill)
     '("t" . meow-till)
     '("u" . meow-undo)
     '("U" . meow-undo-in-selection)
     '("v" . meow-visit)
     '("w" . meow-mark-word)
     '("W" . meow-mark-symbol)
     '("x" . meow-line)
     '("X" . meow-goto-line)
     '("y" . meow-save)
     '("Y" . meow-clipboard-save)
     '("z" . meow-pop-selection)
     '("'" . repeat)
     '("\"" . meow-page-up)
     '("<escape>" . ignore)))
  :init
  (defhydra cur/hydra-buffer-cycle (:timeout 4)
    "tab through buffers"
    ("n" next-buffer "next buffer")
    ("p" previous-buffer "previous buffer")
    ("f" nil "finished" :exit t)
    ("RET" nil "finished" :exit t))
  :custom
  (meow-mode-state-list
   '((authinfo-mode . normal)
     (beancount-mode . normal)
     (bibtex-mode . normal)
     (cider-repl-mode . normal)
     (cider-test-report-mode . normal)
     (cider-browse-spec-view-mode . motion)
     (cargo-process-mode . normal)
     (conf-mode . normal)
     (deadgrep-edit-mode . normal)
     (deft-mode . normal)
     (diff-mode . normal)
     (dired-mode . dired)
     (ediff-mode . motion)
     (gud-mode . normal)
     (haskell-interactive-mode . normal)
     (help-mode . normal)
     (helpful-mode . normal)
     (json-mode . normal)
     (jupyter-repl-mode . normal)
     (mix-mode . normal)
     (occur-edit-mode . normal)
     (pass-view-mode . normal)
     (prog-mode . normal)
     (py-shell-mode . normal)
     (restclient-mode . normal)
     (telega-chat-mode . normal)
     (term-mode . normal)
     (text-mode . normal)
     (vterm-mode . normal)
     (Custom-mode . normal))
   "Default mepw states for modes")
  (meow-cheatsheet-layout meow-cheatsheet-layout-qwerty "Meow qwerty layout for the cheatsheet")
  :bind (:map cur/leader-keymap
	 ;; Files
	 ("f" . counsel-find-file)
	 ;; Buffers
	 ("b C-c" . kill-current-buffer)
	 ("b C-b" . counsel-switch-buffer)
	 ("b C-l" . ibuffer)
	 ("b C-n" . cur/hydra-buffer-cycle/next-buffer)
	 ("b C-p" . cur/hydra-buffer-cycle/previous-buffer)
	 ("b C-s" . save-buffer)
	 :map cur/sub-leader-keymap
	 ("C-b"   . bookmark-jump))
  :config
  (global-set-key (kbd "C-x C-M-~") cur/leader-keymap)
  (define-key cur/leader-keymap (kbd ";") cur/sub-leader-keymap)
  (setq meow-keypad-leader-dispatch "C-x C-M-~")
  (meow-setup)
  (meow-global-mode 1))

(provide 'cur-config-bindings)
;;; cur-config-bindings.el ends here
